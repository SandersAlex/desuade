Desuade Library Change Log - http://desuade.com/
------------------------------------------------

Motion Package 1.5 & Partigen 2.5 (2010/06/14)
	Partigen:
		-added: PixelRenderer & PixelParticle classes for high-performance pixel-based effects
		-added: BasicPool class for Partigen package for object pooling (greatly increases performance)
		-added: Emitter.particleFilters and XML support for dynamic filters on particles
		-added: BitmapRenderer automagicmode - starts/stops the renderer on demand, no need for manual control
		-added: Emitter.cacheParticleAsBitmap for particles
		-added: RenderEvent STARTED & STOPPED events for BitmapRenderer
		-added: BitmapRenderer.predraw (choose to draw the particle before or after filters)
		-added: BitmapRenderer.clear() to clear the bitmapdata
		-added: BitmapRenderer.active - boolean if the renderer is running
		-added: Standard/BitmapRenderer.removeAllParticles()
		-added: IDEEmitter.prefetchTime
		-added: particleBaseClass support in XML
		-added: IBasicParticle and IParticle interfaces
		-added: Pool.length for total particles in the pool
		-added: Pool.purge()
		-added: Emitter.forceVariety for use with BasicPools
		-added: Particle.isclean and isbuilt for use with BasicPools
		-added: MotionController.rebuild()
		-fixed: IDEEmitter issues when not used as a component
		-fixed: Emitter prefetching now much, much more accurate and stable
		-fixed: BitmapCanvas.setRenderer not removing original listener
		-fixed: ParticleController/ParticleTweenController setSmartPrecision() for setBeginValue()
		-fixed: Emitter now has a renderers/particles array so fromXML() has the classes included on compile
		-fixed: BitmapRenderer.resize not disposing bitmaps
		-fixed: Emitter.fromXML renderers not having attributes
		-fixed: Emitter.from/toXML not converting renderer values correctly
		-fixed: Particle would not remove itself from renderer/pool if it was changed before death
		-fixed: BitmapRenderer applying blur when fade = 0
		-fixed: BitmapCanvas resetting coords
		-fixed: IDEEmitter not using the renderer from XML
		-fixed: IDEEmitter not including all renderers
		-fixed: Emitter.fromXML would fail with controllers if the tag/array order wasn't [1]
		-fixed: Particle color controllers would tint entire particles including particleFilters
		-fixed: PELFile would still onLoad() if there was an error
		-fixed: setStartValue() would generate a different value even if the MotionController was already built
		-changed: Particle groups now use a rearrange method, used to refresh a particle to look different
		-changed: BasicPool is now the default (previously NullPool)
		-changed: Pools now require the particleBaseClass in the constructor [not backwards compatible]
		-changed: Pools now use a Dictionary to store particles
		-changed: BasicParticle.count -> Partigen.particleCount
		-changed: BasicEmitter.count -> Partigen.emitterCount
		-changed: handling of adding/removing particles from the pool no longer rely on id
		-changed: Emitters will now emit() as soon as start() is called
		-changed: BasicParticles now place the source particles into a holder and apply color to that
		-changed: internal datatypes for BasicParticle are now IBasicParticle
		-changed: emitter.particleClass => particleBaseClass to avoid confusion
		-changed: ParticleTweenController.setSingleTween() now returns the ParticleTweenController
		-changed: Renderer start() and stop() methods are only on BitmapRenderers now
		-changed: BitmapRenderer._zeroPoint is now a public variable: 'offset'
		-changed: groupBitmap now uses the original positioning unless proximity is > 0
		-changed: BitmapRenderer doesn't need sizes, use resize() after XML load
		-changed: IDEEmitters/BitmapCanvas will still show in IDE (livepreview) when show indicator is false
		-changed: IDEEmitter removed rendertoparent param
		-changed: BitmapCanvas.renderer now read only
		-changed: Bitmap fadeblur is now an int (no sub pixel blurs needed)
		-changed: BitmapRenderer.render() uses drawMethod() now (for inherited renderers to override)
		-changed: MultiControllers now have a rebuild parameter like MotionControllers
		-changed: Emitter.reset now calls pool.purge()
		-changed: particle and particleBaseClass are now getter/setters updated for pools
		
	Motion:
		-added: Pooling support for all Primitive classes
		-added: BasicPhysics.startAtTime()
		-added: BaseTicker.physicsRate
		-fixed: MotionController.start() passing keyframes besides 'begin' and startTime
		-fixed: DelayableFunc delay value turned into an int, preventing decimal delays
		-fixed: KeyframeContainer.isFlat() for spread start values and color = none
		-fixed: Keyframe.fromXML() was modifying original XML, breaking XML reuse
		-changed: Updated Primitives to use init to set properties instead of constructor
		-changed: MultiTween/ColorTween/Tween updated for new Random class
		-changed: MotionController.setSingleTween() returns the MotionController
		-changed: MultiController.addController() returns the MotionController added
		-changed: Physics - added PI constant
		
	Utils:
		-added: BasicObjectPool class
		-added: MultiPool class
		-changed: Random class with faster random method
		-changed: Improved Random/color class with toString and getValue
		
	Examples:
		-fixed: motion_tween event for last demo, and partigen em2 event demo


Motion Package 1.1 & Partigen 2.1 (2010/03/16)
	Partigen:
		-added: prefetching - allows you to start an emitter as if it's already been running
		-added: XML support for Renderers in Emitters - allowing bitmap effect presets
		-added: BitmapCanvas class for BitmapRenderer for easy management of BitmapRenderers
		-added: emitter.particleBlendMode - blendmode for particles
		-added: emitter.groupBitmap - lets particle groups be created as bitmaps
		-added: emitters now automatically start their renderers on start()
		-changed: emitter.particle can now be any class, and does not have to inherit from BasicParticle
		-changed: emitter.particleClass (and groupAmount=0) is the same as old style emitter.particle
		-changed: emitter.start() now accepts the 'prefetch' parameter first
		-changed: re-factored internal emit/createParticle methods
		-changed: BitmapRenderer no longer asks for BitmapData (not backwards-compatible)
		-changed: BasicParticle and Particle classes inherently use groups
		-changed: emitter.groupAmount now defaults to 1
		-changed: Pools now reflect the new particle group system, and are simplified
		-removed: IDEEmitter renderToParent - since new XML renderer feature does this automatically
		-removed: BasicGroupParticle, GroupParticle

	Motion:
		-added: MotionController.start(keyframe, startTime) - startTime (from ClassSequence.startAtTime)
		-added: ClassSequence: duration, startAtTime(), getPositionInTime() for Tween-based classes only
		-added: Tween/BasicTween run method for simple, strict-typed unmanaged tweening
		-added: position parameter to BasicTween
		-added: MotionController.sequence getter
		-changed: MotionController.buildSequence is now public
		-changed: tweenObject -> configObject
		-fixed: motioncontroller/sequence bug
		-fixed: Tween.position bug
		
	Examples:
		-added: examples for DMP 1.1 and Partigen 2.1
		-fixed: lots of misc bugs from .fla->.as port
		
Motion Package 1.0 & Partigen 2.0 Master Release (2009/12/01)

	Motion:
		-added: KeyframeContainers now have a length property
		-changed: BasicPhysics made getVelocityWithAngle public and static
		-changed: PhysicsMultiController precision values changed to v-1,a-2,f-2
		-changed: ease function/string/null conversions done in tween classes > BasicTween
		-changed: primitiveTweens now strictly require ease Functions, doesn't require Easing class
		-changed: moved sequence building in start() for MotionControllers, no need to rebuild sequence
		-changed: controllers.start(keyframe = 'begin')
		-changed: KeyframeContainer.add now returns the Keyframe's label
		-examples: added new MotionController example and starting at custom keyframe example
		-fix: bug when loading eases from XML
		-fix: rare bug with KeyframeContainers internal count - now uses new length prop
		-fix: starting a controller at a keyframe will now start at the correct value
		-fix: makeEase function
		-fix: primitiveTweens not calling update() when duration < 0, causing 0-duration tweens to fail
		-fix: MultiController.fromXML duration not converted to Number
	
	Partigen:
		-added: 'random' ordering for Render classes
		-added: libraries package and PELFile class
		-added: emitter.reset()
		-added: emitter.killParticles()
		-added: error catching when parsing emitter XML
		-changed: ParticleTweenControllers now set the precision based on known special props, like alpha and scale
		-changed: groupAmount = 0 now default
		-changed: NullPool and BasicEmitter - groupAmount 0 will create standard particle, >0 will create a group
		-changed: SweepPool inherits NullPool (for inheritance)
		-changed: emitter.fromXML(xml, reset = true) emitter now resets when XML is applied as default
		-changed: emitter group info always gets output to XML
		-fix: bug when loading eases from XML
		-fix: vector particles no longer bitmaps in FP10
		-fix: emitter.eps defaults to 1 just so emitter doesn't throw an error
		-fix: emitters won't error out on stop() when they're not active
		-fix: emitter.fromXML no particle class -> now throws Debug error
		-fix: emitter.fromXML now has undefined checks for all variables
		-fix: ParticlePhysicsController.fromXML duration not converted to Number
	
	Debugging:
		-added: outputMethod for sending debug info to other methods besides trace
	
	Utils:
		-added: ArrayHelper class
		-added: Shortcuts class
		-added: SWCFile class
		-added: zip package (from nochump) in thirdparty package
		
	Examples:
		-added: utils example for ShortcutManager
		-changed: ActionScript from examples are now in .as files


Release Candidate 2 (2009/8/24)

	Motion:
		-removed: individual ease classes
		-changed: KeyframeContainer.toLabeledArray() now has sort param
		-changed: defaults for MotionControllers
		-changed: controller constructors only require target now
		-fixed: KeyframeContainer.isFlat() skipping first Keyframe
		-fixed: delayed tween weakrefs (thanks Maxfo12) (http://code.google.com/p/desuade/issues/detail?id=1&can=1)
		
	Partigen:
		-added: basic BitmapRenderer
		-changed: moved life settings to BasicEmitter and BasicParticle
		-changed: defaults for ParticleTweenControllers
		-changed: SweepPool - new Array() -> [] (performance+)
		-fixed: emitter.fromXML() returns *
		-fixed: XML not parsing PhysicsParticleController flip and useAngle params
		
		Debugging: none

		Utils: none
		

Release Candidate 1 (2009/7/29):
	
	[Mostly, but not 100% compatible with Beta 3]
	[Individual ease classes will be removed next revision, start using ease strings]
	
	Motion:
		-tween and physics performance is now 5x faster! 2000 tweens: 11fps -> 53fps
		-added: toXML() and fromXML() methods to most classes
		-added: new Sequence, ClassSequence, SequenceGroup, and DelayableFunc classes
		-added: Sequence.manualAdvance/SequenceGroup.manualServe - this prevents the sequence from automatically advancing
		-added: MotionEvent that all motion.events inherit
		-added: eases.Easing class for passing eases as strings (now default)
		-added: Bases package: BaseTicker, BaseBasic, BasePrimitive classes
		-changed: eases should now be entered as Strings - Bounce.easeOut -> 'easeOutBounce'
			eases can also be entered as functions, but will not work with XML and is not recommended anymore
		-changed: tween/physics constructors only require a target
		-changed: PrimitiveTweens no longer dispatch events (updateFunc and endFunc) for performance
		-changed: TweenEvent.UPDATED only gets dispatched if "update:true" is passed to the tween's config
		-changed: MultiController duration/properties constructor order switched
		-changed: motion.sequencers package is now motion.sequences
		-changed: Sequences with Objects have been re-factored into ClassSequence class
		-changed: BasicPhysics refactored to use new Bases package
		-changed: start() returns the object started instead of void/boolean
		-removed: sequence.empty() - use sequence.splice(0)
		-removed: clone() since you can use XML to duplicate now
		-fixed: BasicMultiTween updated properties directly, effecting the tweenconfig
		
	Partigen:
		-added: toXML() and fromXML() methods to most classes
		-added: emitter.enableEvents:Boolean to enable/disable particle events
		-changed: emtiters no longer broadcast particle events by default
		-changed: life is now: life and lifeSpread
		-changed: angle is now: angle and angleSpread
		-changed: eps is now a Number (not int), and allows for 1 emission greater than 1 second
		-fixed: particle physics objects were not being stopped on death
	
	Debugging: none
	
	Utils:
		-added: XMLHelper class
		

Beta 3 (2009/7/23):

	[Motion package not fully backwards compatible]

	Motion:
		-200% speed boost! Renders 2x as many tweens without performance hit
		-removed individual PrimitiveTween update sprite listeners - now uses a BasicTween loop update
		-added render() methods for PrimitiveTweens
		-PrimitiveTweens now do not run an update event automatically - you can use your own loop/timer/event to run render()
		-added BasicTween.ptid for the PrimitiveTween.id
		-Physics and Tween classes now separate 'target' from the tween config for constructor:
			new Tween(target, {property:'x', value:50, duration:2});
			new BasicPhysics(target, {property:'y', velocity:2});
		-updated controllers and sequencers to reflect API changes
		-Fix: KeyframeContainer.isFlat()  0 === '0' bug
		
	Partigen:
		-performance increase inherited from Motion Package
		-added SweepPool to remove particles at a set interval (performance effect unknown)
		-Fix: addColorTween always using 'color'
		-Updated debug codes
		
	Debugging: none
	
	Utils: none
	

Beta 2 (2009/7/03):

	[not backwards compatible at all]

	Motion:
		-rewrote controllers
			-major syntax change
			-ValueController now MotionController
			-PointsContainer now KeyframeContainer
			-Points are now Keyframes
			-PhysicsValueController now PhysicsMultiController
			-uses Keyframes instead of points (same concept, just more intuitive)
		-BasicPhysics now takes object like Tweens (unifying syntax)
		-Changed PhysicsEvent 'stopped' to 'ended'
		-added 'property' to BasicColorTween/ColorTween to allow for non-DisplayObject color tweening
		-added debug codes for BasicPhysics
		-lots of little tweaks

	Partigen:
		-rewrote controllers
			-major syntax change reflecting new Motion Package changes
			-better integration with new Motion classes
			-lots of little tweaks

	Debugging:
		-changed the replace character to % (instead of $)

	Utils: none
	
	
Beta 1 (2009/6/22): initial release